Image2Icon Converter
Version: 1.0
Author: Roswan Miller
Project: Ileices
Copyright: The God Factory | Project Ileices | Roswan Miller
Link: https://youtube.com/thegodfactory
Overview
The Image2Icon Converter is a versatile tool designed to convert image files into multiple icon formats for use on different platforms, including Windows, macOS, and universal applications. It features a user-friendly GUI with a customizable dark theme and provides options to edit and save user documentation within the app.

Features
Convert Images to Icon Formats:

Supported Formats:
.ico (Windows icon format)
.icns (macOS icon format)
.png (Universal icon format)
Supported Sizes:
16x16, 32x32, 48x48, 64x64, 128x128, 256x256, and 512x512.
Customizable Paths:

Editable input image path and output directory path fields.
Dark-Themed GUI:

Colors:
Background: Dark Gray and Black
Text: Green (primary) and Yellow (secondary)
Buttons: Dark Red with Blood Red hover effect
Documentation Editor:

Built-in editable text area for user documentation.
Allows saving and loading documentation in .txt and .md formats.
Cross-Platform Compatibility:

Works on Windows, macOS, and Linux.
Generates icons for applications on all major operating systems.
Error Handling:

Alerts users when paths are invalid or if errors occur during processing.
System Requirements
Python: Version 3.7 or higher
Dependencies:
Pillow (Python Imaging Library fork)
Supported Operating Systems:
Windows, macOS, Linux
Installation
Ensure Python is installed on your system (version 3.7 or higher).
Install the required Pillow library:
bash
Copy code
pip install pillow
Download the image2icon.py script and place it in a desired directory.
Usage
Step 1: Start the Application
Open a terminal or command prompt.
Run the script:
bash
Copy code
python image2icon.py
Step 2: Select Input Image
Click the Browse button next to the "Input Image Path" field.
Select an image file in one of the supported formats:
.png, .jpg, .jpeg, .bmp, .gif, .tiff, .webp.
Step 3: Select Output Directory
Click the Browse button next to the "Output Directory" field.
Choose the folder where the generated icons will be saved.
Step 4: Convert to Icon Formats
Click the Convert to Icon Formats button.
The app generates icons in the following formats and sizes:
Windows: .ico (sizes: 16x16, 32x32, 48x48, 64x64, 128x128, 256x256)
macOS: .icns (size: 512x512)
Universal: .png (all sizes)
Step 5: Edit Documentation
Click the Documentation button to open the documentation editor.
Add or modify instructions or notes.
Save the documentation as a .txt or .md file.
Step 6: View Output
Navigate to the output directory.
Verify that all icon formats and sizes have been generated.
GUI Overview
Main Window
Title: "Image2Icon Converter"
Components:
Input Image Path:
Editable text field
Browse button
Output Directory:
Editable text field
Browse button
Convert to Icon Formats button
Documentation button
Footer:
Copyright: "The God Factory | Project Ileices | Roswan Miller"
Links to YouTube channel.
Documentation Editor
Title: "Documentation Editor"
Components:
Editable text area
Scrollbar for navigation
Save Documentation button
Supported Formats and Sizes
Input Formats:
.png, .jpg, .jpeg, .bmp, .gif, .tiff, .webp
Output Formats:
Windows Icon (.ico):
Sizes: 16x16, 32x32, 48x48, 64x64, 128x128, 256x256
macOS Icon (.icns):
Size: 512x512
Universal Icon (.png):
Sizes: 16x16, 32x32, 48x48, 64x64, 128x128, 256x256, 512x512
Error Messages
Invalid Input File Path:
Triggered when the selected input file is not found or unsupported.
Invalid Output Directory Path:
Triggered when the selected output directory is not valid.
Conversion Error:
Triggered when an error occurs during image processing.
Example Use Cases
App Development:
Create platform-specific icons for Windows, macOS, and Linux applications.
Website Favicon:
Generate .ico files for website favicons.
Universal Icons:
Create .png icons for cross-platform compatibility.
Troubleshooting
Issue: Invalid Path
Ensure the input image path points to an existing image file.
Ensure the output directory path points to a valid folder.
Issue: Unsupported Image Format
Confirm the input file is in one of the supported formats.
Issue: Missing Icons
Verify that the output directory has sufficient write permissions.
Future Enhancements
Add drag-and-drop functionality for input images.
Support additional icon formats (e.g., .svg).
Include advanced settings for custom sizes and resolutions.
For any issues or feature requests, please contact Roswan Miller through the YouTube channel.